Compiling guest agent
=====================

Just compile with ``make``. 

You may need to install the following packages. For example, on Ubuntu, or Debian:
::
  apt-get install libc6-dev-i386

Compiling test files
====================

In order to compile the test files, just use the provided Makefile as follows:
::
  make test_32
  make test_64

Configuring guest agent
=======================

- Add `plugins.guest_agent: True` to your pyrebox.conf
- (Optionally) modify your guest agent file name.
- Add the agent configuration to your pyrebox.conf
- Adjust the configuration appropriately (if you changed the agent file name).
- Make sure the agent conf file exists and is up to date. This file is automatically
  generated by the compilation process.
- Copy the corresponding guest agent (32 or 64 bit version) to the guest VM, and make 
  sure it follows the same name as declared in the configuration name.
- Start the agent (you can configure the VM to start the agent on every system start-up).
- Once the agent is started, you can take a snapshot.

Example configuration of guest agent in pyrebox.conf:
::
  [AGENT]
  name: linux_agent_64
  conf: linux_agent_64.conf


Using guest_agent
=================

In scripts:

- Add ``plugins.guest_agent: True`` to your pyrebox.conf, or:
- Add a member to your module named "requirements" containing a 
  list of required plugins/scripts. E.g.: ``requirements = ["plugins.guest_agent"]``
- Import the plugin with ``from plugins.guest_agent import guest_agent`` in your script.
- Interact with the guest agent using the public interface of this class (agent is 
  a singleton instance of GuestAgentPlugin).

In the IPython shell:

- If no script is loading the guest_agent plugin, you will need to make sure it 
  gets loaded by adding ``plugins.guest_agent: True`` to your pyrebox.conf.
- Interact with the guest agent using the global member ``agent`` that is a singleton
  instance of GuestAgentPlugin.
